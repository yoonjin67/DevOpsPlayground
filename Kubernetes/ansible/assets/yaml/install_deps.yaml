- name: Kubernetes Dependency Setup
  hosts: all
  become: yes
  become_user: "root"
  become_method: sudo
  vars_files:
    - vault.yaml
  tasks:
    - name: Updates
      apt:
        update-cache: yes

    - name: Reboot
      reboot:

    - name: Disable SWAP # Disable SWAP with Regular Expression
      shell: |
        swapoff -a
    - name: Disable SWAP in fstab
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'

    - name: Create an empty configuration for the CRI
      copy:
        dest: /etc/sysctl.d/99-k8s-cri-setup.conf # CRI config is separately managed
        content: ""
        mode: '0644'

    - name: Configure IPV4 Forwarding # ipv4 should be forwarded
      lineinfile:
        path: /etc/sysctl.d/99-k8s-cri-setup.conf
        line: "{{ item }}"
      with_items:
        - "net.ipv4.ip_forward                  = 1"

    - name: Set IPv4 Forwarding
      sysctl:
        name: net.ipv4.ip_forward
        value: 1

    - name: Install APT Transport HTTPS
      apt: 
        name: apt-transport-https
        state: present

    - name: Install Podman 
      apt:
        name: podman
        state: present

    - name: Setup Docker Compatibility
      apt:
        name: podman-docker # Using Default supported Podman instead of Docker CE
        state: present

    - name: Install Containerd
      apt:
        name: containerd
        state: present

    - name: Configure Systemd Cgroup Driver
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: "SystemdCgroup = false"
        line: "SystemdCgroup = true"

    - name: Enable the containerd service and start
      systemd:
        name: containerd
        state: restarted
        enabled: yes
        daemon-reload: yes

    - name: Install Kubelet  # Installing K8S deps starts here.
      apt:
        name: "kubelet={{ pinning_version }}"
        state: present
      vars:
        pinning_version: "1.32.3"

    - name: Pin Kubelet
      apt:
        name: "kubelet={{ pinning_version }}"
        state: present
        dpkg_options: 'Pin={{ pinning_version }}'
      vars:
        pinning_version: "1.32.3"

    - name: Install Kubectl
      apt:
        name: "kubectl={{ pinning_version }}"
        state: present
      vars:
        pinning_version: "1.32.3"

    - name: Pin Kubectl
      apt:
        name: "kubectl={{ pinning_version }}"
        state: present
        dpkg_options: 'Pin={{ pinning_version }}'
      vars:
        pinning_version: "1.32.3"

    - name: Install KubeADM
      apt:
        name: "kubeadm={{ pinning_version }}"
        state: present
      vars:
        pinning_version: "1.32.3"

    - name: Pin KubeADM
      apt:
        name: "kubeadm={{ pinning_version }}"
        state: present
        dpkg_options: "Pin={{ pinning_version }}"
      vars:
        pinning_version: "1.32.3"

    - name: Enable the Kubelet Service
      service:
        name: kubelet
        enabled: yes

    - name: Load br_netfilter kernel module
      modprobe:
        name: br_netfilter
        state: present

    - name: Apply sysctl parameters
      command: sysctl -p # do not use sysctl --system since it is outdated 

    - name: Add br_netfilter persistently ## THIS PART IS IMPORTANT
      copy:
        content: "br_netfilter\n"
        dest: "/etc/modules"
        mode: "a+"
        backup: yes

- hosts: master
  become: yes
  tasks:
    - name: Install Kubectl
      apt:
        name: kubectl={{ pinning_version }}
        state: present
        force: yes
      vars:
        pinning_version: "1.32.3"

